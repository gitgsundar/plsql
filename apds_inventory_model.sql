Comments - 
---------
	ACTIVE_FLAG				-		Status of the Record. Values Y or N
	SECURITY_FLAG			-		Database Contains PCI/PHI/HIPPA Data Elements.  Values Y or N
	AUDIT_FLAG				-		Whether DB is Audited.  Values Y or N
	RECORD_SRC				-		Source Name from which we got this data. Values are InfoHub, Grid Control, Manual etc. We may want to put check constraint if required. Values MANUAL, GRID-CONTROL, INFOHUB.
	ENV_FLAG					-		Name of the Environment. Values P-Production, N-Non-Production.
	CREATED_DATE			-		Date when the record was creaed. Values SYSDATE
	CREATED_BY				-		Who created the record. Values can be BadgeID if inserted manually. Program Name if it was automated.
	LAST_UPDATED_DATE	-   Date when the record was last updated. Values SYSDATE	
	LAST_UPDATED_BY		-		Who last updated the record. Values can be BadgeID if updated manually. Program Name if it was automated.

-- APDS_ADMIN Schema Creation

grant connect, resource, dba to apds_admin identified by aPdYes_!23;
create tablespace apds_admin datafile '/u01/oradata/gan18c/DATAFILE/apds_admin_01.dbf' size 1g;
alter user apds_admin default tablespace apds_admin quota unlimited on apds_admin;
grant create database link to apds_admin;


-- APDS_ADMIN Objects

drop table apds_admin.apds_config purge;

-- Source :	Manual Entry

create table apds_admin.apds_config (
	module_name				varchar2(30),
	config_name				varchar2(30),
	config_value			varchar2(30),
	data_type					char(1),
	description				varchar2(100),
	comments					varchar2(250),
	record_src				varchar2(30),
	created_date			date		default 	sysdate,
	created_by				varchar2(30),
	last_updated_date	date		default		sysdate,
	last_updated_by		varchar2(30),
	constraint	data_type_chk	check (data_type in ('N','C')),
	constraint 	apds_config_u1 primary key (module_name,config_name)
);

insert into apds_admin.apds_config values('INVENTORY_UPDATE_SYSTEM','OMS','cloudp','C','Database Connect String for Oracle Cloud Control Application','','MANUAL',SYSDATE,'APDS_ADMIN',SYSDATE,'APDS_ADMIN');
insert into apds_admin.apds_config values('INVENTORY_UPDATE_SYSTEM','INFOHUB','topoprd','C','Database Connect String for Infohub Application','','MANUAL',SYSDATE,'APDS_ADMIN',SYSDATE,'APDS_ADMIN');

insert into apds_admin.apds_config values('CAPACITY_PLANNING_SYSTEM','PURGE_VOLUME_MONTHS',30,'N','Retention Number in Months for Capacity Planning System Module','','MANUAL',SYSDATE,'APDS_ADMIN',SYSDATE,'APDS_ADMIN');
insert into apds_admin.apds_config values('CAPACITY_PLANNING_SYSTEM','NON-PROD-SYSTEM-PASS',translate('Fam1ly#5','0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ','9876543210ZYXWVUTSRQPONMLKJIHGFEDCBAzyxwvutsrqponmlkjihgfedcba'),'C','Non Production SYSTEM Account Password','','MANUAL',SYSDATE,'APDS_ADMIN',SYSDATE,'APDS_ADMIN');
insert into apds_admin.apds_config values('CAPACITY_PLANNING_SYSTEM','PROD-SYSTEM-PASS',translate('JUNK','0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ','9876543210ZYXWVUTSRQPONMLKJIHGFEDCBAzyxwvutsrqponmlkjihgfedcba'),'C','Production SYSTEM Account Password','','MANUAL',SYSDATE,'APDS_ADMIN',SYSDATE,'APDS_ADMIN');
commit;

update apds_admin.apds_config
set config_value = translate('Amigos#9','0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ','9876543210ZYXWVUTSRQPONMLKJIHGFEDCBAzyxwvutsrqponmlkjihgfedcba')
where config_name = 'PROD-SYSTEM-PASS';

-- ADPS_ADMIN.APDS_DEPLOYMENT

drop table apds_admin.apds_deployment purge;

create table apds_admin.apds_deployment (
	deployment_id			number	generated by default on null as identity,
	deployment_type		varchar2(30),
	deployment_name		varchar2(30),
	description				varchar2(100),
	location_address1	varchar2(100),
	location_address2	varchar2(100),
	location_city			varchar2(30),
	location_state		char(2),
	location_zip			varchar2(10),
	location_country	varchar2(30),
	comments					varchar2(250),
	contact1					varchar2(250),
	contact2					varchar2(250),
	contact3					varchar2(250),
	record_src				varchar2(30),
	created_date			date		default 	sysdate,
	created_by				varchar2(30),
	last_updated_date	date		default		sysdate,
	last_updated_by		varchar2(30),
	constraint apds_deployment_u1 primary key (deployment_id)
);

/*
-- Source :

-- deployment_type	: Possible values Cloud, On-Prem, Hybrid
-- deployment_name	: Possible values AWS, GOOGLE, AZURE, ORACLE, RICHMOND, HARRISONBURG, MISSOURI

insert into apds_admin.apds_deployment values (null,'On-Prem','RICHMOND','','2015 Staples Mill Road','','Richmond','VA','23230-3108','USA','','','','','MANUAL',sysdate,'APDS_ADMIN',sysdate,'APDS_ADMIN');
insert into apds_admin.apds_deployment values (null,'On-Prem','HARRISONBURG','','1175 N Main Street','','Harrisonburg','VA','22802-4630','USA','','','','','MANUAL',sysdate,'APDS_ADMIN',sysdate,'APDS_ADMIN');
insert into apds_admin.apds_deployment values (null,'On-Prem','MISSOURI','','1831 Chestnut Street','','St. Louis','MO','63103-2275','USA','','','','','MANUAL',sysdate,'APDS_ADMIN',sysdate,'APDS_ADMIN');
insert into apds_admin.apds_deployment values (null,'Cloud','AWS','','','','','','','','','','','','MANUAL',sysdate,'APDS_ADMIN',sysdate,'APDS_ADMIN');
insert into apds_admin.apds_deployment values (null,'Cloud','AZURE','','','','','','','','','','','','MANUAL',sysdate,'APDS_ADMIN',sysdate,'APDS_ADMIN');
insert into apds_admin.apds_deployment values (null,'Cloud','GOOGLE','','','','','','','','','','','','MANUAL',sysdate,'APDS_ADMIN',sysdate,'APDS_ADMIN');
insert into apds_admin.apds_deployment values (null,'Cloud','ORACLE','','','','','','','','','','','','MANUAL',sysdate,'APDS_ADMIN',sysdate,'APDS_ADMIN');

commit;

*/

-- ADPS_ADMIN.APDS_EXADATA 

drop table apds_admin.apds_exadata purge;

create table apds_admin.apds_exadata (
	exadata_id					number	default 1,
	exadata_name				varchar2(256),
  cluster_name				varchar2(30), 
	exadata_family			varchar2(30),
	patch_cycle					varchar2(30),
	purchased_date			date,
	expiry_date					date,
	rack_serial					varchar2(30),
	oracle_csi					varchar2(30),
	cabinet_location		varchar2(30),
	dma									varchar2(30),
	comments						varchar2(250),
	deployment_id				number,
	active_flag					char(1),
	env_flag						varchar2(10),
	record_src					varchar2(30),
	created_date				date		default 	sysdate,
	created_by					varchar2(30),
	last_updated_date		date		default		sysdate,
	last_updated_by			varchar2(30),
	constraint apds_exadata_u1 primary key(exadata_id,cluster_name),
	constraint apds_exadata_f1 foreign key(deployment_id) references apds_admin.apds_deployment(deployment_id)
);

/*
-- Source :

insert into apds_admin.apds_exadata (exadata_name, cluster_name, exadata_family, patch_cycle, purchased_date, expiry_date, rack_serial, oracle_csi, cabinet_location, dma, 
										comments, deployment_id, active_flag, env_flag, record_src, created_date, created_by,	last_updated_date, last_updated_by)
select distinct aggregate_target_name exadata_name,
    ( case 
          when instr(aggregate_target_name,'Prod Cluster A') > 0 then 'Prod-A'  
          when instr(aggregate_target_name,'Prod Cluster B') > 0 then 'Prod-B' 
          when instr(aggregate_target_name,'Prod Cluster C') > 0 then 'Prod-C' 
          when instr(aggregate_target_name,'Prod Cluster D') > 0 then 'Prod-D' 
          when instr(aggregate_target_name,'PROD Cluster E') > 0 then 'Prod-E'
          when instr(aggregate_target_name,'va10px08.rm.wellpoint.com') > 0 AND instr(member_target_name,'v1') > 0 then 'Prod-F'
          when instr(aggregate_target_name,'va10px09.rm.wellpoint.com') > 0 AND instr(member_target_name,'v1') > 0 then 'Prod-G'
          when instr(aggregate_target_name,'va10px15.rm.wellpoint.com') > 0 then 'Prod-H'
          when instr(aggregate_target_name,'va10px09.rm.wellpoint.com') > 0 AND instr(member_target_name,'v2') > 0 then 'Prod-I'
          when instr(aggregate_target_name,'va10px08.rm.wellpoint.com') > 0 AND instr(member_target_name,'v2') > 0 then 'Prod-J'
          when instr(aggregate_target_name,'Dev Cluster A') > 0 then 'Dev-A'
          when instr(aggregate_target_name,'Dev Cluster B') > 0 then 'Dev-B'
          when instr(aggregate_target_name,'Dev Cluster C') > 0 then 'Dev-C'
          when instr(aggregate_target_name,'Dev Cluster D') > 0 then 'Dev-D'
          when instr(aggregate_target_name,'Dev Cluster E') > 0 then 'Dev-E'
          when instr(aggregate_target_name,'va10dx10.rm.wellpoint.com') > 0 AND instr(member_target_name,'v1') > 0 then 'Dev-F'
          when instr(aggregate_target_name,'va33dx13.rm.wellpoint.com') > 0 AND (instr(member_target_name,'301v1') > 0  OR instr(member_target_name,'302v1') > 0) then 'Dev-G'
          when instr(aggregate_target_name,'va33dx13.rm.wellpoint.com') > 0 AND (instr(member_target_name,'303v1') > 0  OR instr(member_target_name,'304v1') > 0) then 'Dev-H'
          when instr(aggregate_target_name,'va33dx13.rm.wellpoint.com') > 0 AND (instr(member_target_name,'301v2') > 0  OR instr(member_target_name,'302v2') > 0) then 'Dev-I'
          when instr(aggregate_target_name,'va10dx10.rm.wellpoint.com') > 0 AND instr(member_target_name,'v2') > 0 then 'Dev-J'
          when instr(aggregate_target_name,'va33dx14.rm.wellpoint.com') > 0 then 'Dev-K'
          when instr(aggregate_target_name,'va33fx07') > 0 then 'DR-A'
          when instr(aggregate_target_name,'va33fx11') > 0 AND instr(member_target_name,'v1') > 0 then 'DR-B'
          when instr(aggregate_target_name,'va33fx12') > 0 then 'DR-C'
          when instr(aggregate_target_name,'va33fx11') > 0 AND instr(member_target_name,'v2') > 0 then 'DR-D'
          when instr(aggregate_target_name,'va33rx01.rm.wellpoint.com') > 0 then 'ZDLRA-A'
          when instr(aggregate_target_name,'va10rx01.rm.wellpoint.com') > 0 then 'ZDLRA-B'
          when instr(aggregate_target_name,'mom9rx01.wellpoint.com') > 0 then 'ZDLRA-C'
          else 'DELETE-RECORD' end ) cluster_name, null exadata_family,
     ( case 
          when instr(aggregate_target_name,'Prod Cluster A') > 0 then 'Q1-Q3'  
          when instr(aggregate_target_name,'Prod Cluster B') > 0 then 'Q2-Q4' 
          when instr(aggregate_target_name,'Prod Cluster C') > 0 then 'Q1-Q3' 
          when instr(aggregate_target_name,'Prod Cluster D') > 0 then 'Q1-Q3' 
          when instr(aggregate_target_name,'PROD Cluster E') > 0 then 'Q2-Q4'
          when instr(aggregate_target_name,'va10px08.rm.wellpoint.com') > 0 AND instr(member_target_name,'v1') > 0 then 'Q2-Q4'
          when instr(aggregate_target_name,'va10px09.rm.wellpoint.com') > 0 AND instr(member_target_name,'v1') > 0 then 'Q1-Q3'
          when instr(aggregate_target_name,'va10px15.rm.wellpoint.com') > 0 then 'Q2-Q4'
          when instr(aggregate_target_name,'va10px09.rm.wellpoint.com') > 0 AND instr(member_target_name,'v2') > 0 then 'Q1-Q3'
          when instr(aggregate_target_name,'va10px08.rm.wellpoint.com') > 0 AND instr(member_target_name,'v2') > 0 then 'Q2-Q4'         
          when instr(aggregate_target_name,'Dev Cluster A') > 0 then 'Q1-Q3'
          when instr(aggregate_target_name,'Dev Cluster B') > 0 then 'Q2-Q4'
          when instr(aggregate_target_name,'Dev Cluster C') > 0 then 'Q1-Q3'
          when instr(aggregate_target_name,'Dev Cluster D') > 0 then 'Q1-Q3'
          when instr(aggregate_target_name,'Dev Cluster E') > 0 then 'Q2-Q4' 
          when instr(aggregate_target_name,'va10dx10.rm.wellpoint.com') > 0 then 'Q2-Q4'
          when instr(aggregate_target_name,'va33dx13.rm.wellpoint.com') > 0 AND (instr(member_target_name,'301v1') > 0  OR instr(member_target_name,'302v1') > 0) then 'Q1-Q3'
          when instr(aggregate_target_name,'va33dx13.rm.wellpoint.com') > 0 AND (instr(member_target_name,'303v1') > 0  OR instr(member_target_name,'304v1') > 0) then 'Q2-Q4'
          when instr(aggregate_target_name,'va33dx13.rm.wellpoint.com') > 0 AND (instr(member_target_name,'301v2') > 0  OR instr(member_target_name,'302v2') > 0) then 'Q1-Q3'
          when instr(aggregate_target_name,'va33dx14.rm.wellpoint.com') > 0 then 'Q2-Q4'
          when instr(aggregate_target_name,'va33fx07') > 0 then 'Q1-Q3'
          when instr(aggregate_target_name,'va33fx11') > 0 AND instr(member_target_name,'v1') > 0 then  'Q2-Q4'
          when instr(aggregate_target_name,'va33fx12') > 0 then 'Q1-Q3'
          when instr(aggregate_target_name,'va33fx11') > 0 AND instr(member_target_name,'v2') > 0 then  'Q2-Q4'
          when instr(aggregate_target_name,'va33rx01.rm.wellpoint.com') > 0 then 'NEED-TO-UPDATE-A'
          when instr(aggregate_target_name,'va10rx01.rm.wellpoint.com') > 0 then 'NEED-TO-UPDATE-B'
          when instr(aggregate_target_name,'mom9rx01.wellpoint.com') > 0 then 'NEED-TO-UPDATE-C'
          else 'DELETE-RECORD' end ) patch_cycle,
          null,null,null,null,null,null,null,          
          1,'Y',decode(instr(aggregate_target_name,'dx'),0,decode(instr(aggregate_target_name,'fx'),0,decode(instr(aggregate_target_name,'rx'),0,'Prod','Prod-RA'),'DR'),'Non-Prod') Env_flag,'GRID-CONTROL',sysdate,'APDS_ADMIN',sysdate,'APDS_ADMIN'
from sysman.XA_DBM_FLAT_MEMBERS@apds_oms
order by 1,3,2;

delete apds_admin.apds_exadata where cluster_name='DELETE-RECORD';

update apds_admin.apds_exadata
set exadata_family =
 (case 
        when cluster_name in ('Prod-A','Prod-B','Prod-C','Prod-D','Dev-A','Dev-B','Dev-D') then 'X4-2'
        when cluster_name in ('Prod-E','Dev-C','Dev-E','DR-A') then 'X5-2'
        when cluster_name in ('Prod-F','Prod-G','Prod-I','Prod-J','Dev-F','Dev-G','Dev-H','Dev-I','Dev-J','DR-B','DR-C','DR-D','ZDLRA-A','ZDLRA-B','ZDLRA-C') then 'X6-2'
        when cluster_name in ('Prod-H','Dev-K') then 'X7-2'
        else 'NEED-TO-UPDATE' end );

update apds_admin.apds_exadata
	set deployment_id = 2
	where cluster_name in ('Dev-G','DR-A','DR-B','DR-C','DR-D','ZDLRA-A','ZDLRA-B') ;

update apds_admin.apds_exadata
	set deployment_id = 3
	where cluster_name in ('Prod-D','Dev-D','ZDLRA-C');

update apds_admin.apds_exadata
set exadata_id =
    (case
         when instr(exadata_name,'dx04') > 0 then 1
         when instr(exadata_name,'px04') > 0 then 1
         when instr(exadata_name,'dx03') > 0 then 2
         when instr(exadata_name,'dx05') > 0 then 3
         when instr(exadata_name,'dx10') > 0 then 4
         when instr(exadata_name,'dx13') > 0 then 5
         when instr(exadata_name,'dx14') > 0 then 6
         when instr(exadata_name,'px01') > 0 then 7
         when instr(exadata_name,'px02') > 0 then 8
         when instr(exadata_name,'px08') > 0 then 9
         when instr(exadata_name,'px09') > 0 then 10
         when instr(exadata_name,'px15') > 0 then 11
         when instr(exadata_name,'fx07') > 0 then 12
         when instr(exadata_name,'fx11') > 0 then 13
         when instr(exadata_name,'fx12') > 0 then 14
         when instr(exadata_name,'mom9rx01') > 0 then 15
         when instr(exadata_name,'va10rx01') > 0 then 16
         when instr(exadata_name,'va33rx01') > 0 then 17
    end);

-- Sandbox Exadata Manual Add

insert into apds_admin.apds_exadata values (18,'DB Machine va10dx06 Sandbox Cluster Z','X5-2','Dev-Z','Q1-Q2-Q3-Q4',null,null,null,null,null,null,null,1,'Y','Non-Prod','MANUAL',sysdate,'APDS_ADMIN',sysdate,'APDS_ADMIN');

commit;

*/

-- ADPS_ADMIN.APDS_EXADATA_DTL 
	
drop table apds_admin.apds_exadata_dtl purge;

create table apds_admin.apds_exadata_dtl (
	exadata_id					number,
  cluster_name				varchar2(30), 
	member_name					varchar2(256),
	member_type					varchar2(64),
  member_desc					varchar2(256),
	exadata_family			varchar2(30),
	exadata_id					number,
	patch_cycle					varchar2(30),
	comments						varchar2(250),
	deployment_id				number,
	active_flag					char(1),
	env_flag						varchar2(10),
	record_src					varchar2(30),
	created_date				date		default 	sysdate,
	created_by					varchar2(30),
	last_updated_date		date		default		sysdate,
	last_updated_by			varchar2(30),
	constraint apds_exadata_dtl_u1 primary key(exadata_name,member_name,member_type),
	constraint apds_exadata_dtl_f1 foreign key(deployment_id) references apds_admin.apds_deployment(deployment_id)
);

/*
-- Source :

insert into apds_admin.apds_exadata_dtl(exadata_name,	member_name, member_type, member_desc, cluster_name, exadata_family, exadata_id, patch_cycle,	
										comments, deployment_id, active_flag,	env_flag,	record_src,	created_date,	created_by,	last_updated_date, last_updated_by)
select aggregate_target_name exadata_name, member_target_name member_name, member_target_type member_type,
	decode(member_target_type,'host','Host',
		'oracle_database','Database Instance',
		'oracle_pdb','Pluggable Database',
		'rac_database','Cluster Database',
    'oracle_exadata','Oracle Exadata Storage Server',
    'oracle_exadata_grid','Oracle Exadata Storage Server Grid',
    'oracle_exa_cisco_switch','Oracle Engineered System Cisco Switch',
    'oracle_exa_pdu','Oracle Engineered System PDU',
    'oracle_exa_ilom','Oracle Engineered System ILOM Server',
    'oracle_ibswitch','Oracle Infiniband Switch',
    'oracle_ibnetwork','Oracle Infiniband Network',member_target_type) member_desc,
    ( case 
          when instr(aggregate_target_name,'Prod Cluster A') > 0 then 'Prod-A'  
          when instr(aggregate_target_name,'Prod Cluster B') > 0 then 'Prod-B' 
          when instr(aggregate_target_name,'Prod Cluster C') > 0 then 'Prod-C' 
          when instr(aggregate_target_name,'Prod Cluster D') > 0 then 'Prod-D' 
          when instr(aggregate_target_name,'PROD Cluster E') > 0 then 'Prod-E'
          when instr(aggregate_target_name,'va10px08.rm.wellpoint.com') > 0 AND instr(member_target_name,'v1') > 0 then 'Prod-F'
          when instr(aggregate_target_name,'va10px09.rm.wellpoint.com') > 0 AND instr(member_target_name,'v1') > 0 then 'Prod-G'
          when instr(aggregate_target_name,'va10px15.rm.wellpoint.com') > 0 then 'Prod-H'
          when instr(aggregate_target_name,'va10px09.rm.wellpoint.com') > 0 AND instr(member_target_name,'v2') > 0 then 'Prod-I'
          when instr(aggregate_target_name,'va10px08.rm.wellpoint.com') > 0 AND instr(member_target_name,'v2') > 0 then 'Prod-J'
          when instr(aggregate_target_name,'Dev Cluster A') > 0 then 'Dev-A'
          when instr(aggregate_target_name,'Dev Cluster B') > 0 then 'Dev-B'
          when instr(aggregate_target_name,'Dev Cluster C') > 0 then 'Dev-C'
          when instr(aggregate_target_name,'Dev Cluster D') > 0 then 'Dev-D'
          when instr(aggregate_target_name,'Dev Cluster E') > 0 then 'Dev-E'
          when instr(aggregate_target_name,'va10dx10.rm.wellpoint.com') > 0 AND instr(member_target_name,'v1') > 0 then 'Dev-F'
          when instr(aggregate_target_name,'va33dx13.rm.wellpoint.com') > 0 AND (instr(member_target_name,'301v1') > 0  OR instr(member_target_name,'302v1') > 0) then 'Dev-G'
          when instr(aggregate_target_name,'va33dx13.rm.wellpoint.com') > 0 AND (instr(member_target_name,'303v1') > 0  OR instr(member_target_name,'304v1') > 0) then 'Dev-H'
          when instr(aggregate_target_name,'va33dx13.rm.wellpoint.com') > 0 AND (instr(member_target_name,'301v2') > 0  OR instr(member_target_name,'302v2') > 0) then 'Dev-I'
          when instr(aggregate_target_name,'va10dx10.rm.wellpoint.com') > 0 AND instr(member_target_name,'v2') > 0 then 'Dev-J'
          when instr(aggregate_target_name,'va33dx14.rm.wellpoint.com') > 0 then 'Dev-K'
          when instr(aggregate_target_name,'va33fx07') > 0 then 'DR-A'
          when instr(aggregate_target_name,'va33fx11') > 0 AND instr(member_target_name,'v1') > 0 then 'DR-B'
          when instr(aggregate_target_name,'va33fx12') > 0 then 'DR-C'
          when instr(aggregate_target_name,'va33fx11') > 0 AND instr(member_target_name,'v2') > 0 then 'DR-D'
          when instr(aggregate_target_name,'va33rx01.rm.wellpoint.com') > 0 then 'ZDLRA-A'
          when instr(aggregate_target_name,'va10rx01.rm.wellpoint.com') > 0 then 'ZDLRA-B'
          when instr(aggregate_target_name,'mom9rx01.wellpoint.com') > 0 then 'ZDLRA-C'
          else 'NEED-TO-UPDATE' end ) cluster_name, null exadata_family, null exadata_id,
     ( case 
          when instr(aggregate_target_name,'Prod Cluster A') > 0 then 'Q1-Q3'  
          when instr(aggregate_target_name,'Prod Cluster B') > 0 then 'Q2-Q4' 
          when instr(aggregate_target_name,'Prod Cluster C') > 0 then 'Q1-Q3' 
          when instr(aggregate_target_name,'Prod Cluster D') > 0 then 'Q1-Q3' 
          when instr(aggregate_target_name,'PROD Cluster E') > 0 then 'Q2-Q4'
          when instr(aggregate_target_name,'va10px08.rm.wellpoint.com') > 0 AND instr(member_target_name,'v1') > 0 then 'Q2-Q4'
          when instr(aggregate_target_name,'va10px09.rm.wellpoint.com') > 0 AND instr(member_target_name,'v1') > 0 then 'Q1-Q3'
          when instr(aggregate_target_name,'va10px15.rm.wellpoint.com') > 0 then 'Q2-Q4'
          when instr(aggregate_target_name,'va10px09.rm.wellpoint.com') > 0 AND instr(member_target_name,'v2') > 0 then 'Q1-Q3'
          when instr(aggregate_target_name,'va10px08.rm.wellpoint.com') > 0 AND instr(member_target_name,'v2') > 0 then 'Q2-Q4'         
          when instr(aggregate_target_name,'Dev Cluster A') > 0 then 'Q1-Q3'
          when instr(aggregate_target_name,'Dev Cluster B') > 0 then 'Q2-Q4'
          when instr(aggregate_target_name,'Dev Cluster C') > 0 then 'Q1-Q3'
          when instr(aggregate_target_name,'Dev Cluster D') > 0 then 'Q1-Q3'
          when instr(aggregate_target_name,'Dev Cluster E') > 0 then 'Q2-Q4' 
          when instr(aggregate_target_name,'va10dx10.rm.wellpoint.com') > 0 then 'Q2-Q4'
          when instr(aggregate_target_name,'va33dx13.rm.wellpoint.com') > 0 AND (instr(member_target_name,'301v1') > 0  OR instr(member_target_name,'302v1') > 0) then 'Q1-Q3'
          when instr(aggregate_target_name,'va33dx13.rm.wellpoint.com') > 0 AND (instr(member_target_name,'303v1') > 0  OR instr(member_target_name,'304v1') > 0) then 'Q2-Q4'
          when instr(aggregate_target_name,'va33dx13.rm.wellpoint.com') > 0 AND (instr(member_target_name,'301v2') > 0  OR instr(member_target_name,'302v2') > 0) then 'Q1-Q3'
          when instr(aggregate_target_name,'va33dx14.rm.wellpoint.com') > 0 then 'Q2-Q4'
          when instr(aggregate_target_name,'va33fx07') > 0 then 'Q1-Q3'
          when instr(aggregate_target_name,'va33fx11') > 0 AND instr(member_target_name,'v1') > 0 then  'Q2-Q4'
          when instr(aggregate_target_name,'va33fx12') > 0 then 'Q1-Q3'
          when instr(aggregate_target_name,'va33fx11') > 0 AND instr(member_target_name,'v2') > 0 then  'Q2-Q4'
          when instr(aggregate_target_name,'va33rx01.rm.wellpoint.com') > 0 then 'NEED-TO-UPDATE-A'
          when instr(aggregate_target_name,'va10rx01.rm.wellpoint.com') > 0 then 'NEED-TO-UPDATE-B'
          when instr(aggregate_target_name,'mom9rx01.wellpoint.com') > 0 then 'NEED-TO-UPDATE-C'
          else 'NEED-TO-UDPATE' end ) patch_cycle, null comments, 
1,'Y',decode(instr(aggregate_target_name,'dx'),0,decode(instr(aggregate_target_name,'fx'),0,decode(instr(aggregate_target_name,'rx'),0,'Prod','Prod-RA'),'DR'),'Non-Prod') Env_flag,'GRID-CONTROL',sysdate,'APDS_ADMIN',sysdate,'APDS_ADMIN'
from sysman.XA_DBM_FLAT_MEMBERS@apds_oms
order by 1,3,2;

declare
begin
for i in (select * from apds_admin.apds_exadata_dtl where cluster_name='NEED-TO-UPDATE' and member_type in ('rac_database','oracle_pdb','oracle_database')) loop
        update apds_admin.apds_exadata_dtl
        set cluster_name = (select cluster_name from apds_admin.apds_exadata_dtl 
                                where member_name in (select host_name from apds_admin.apds_database 
                                    where database_name = i.member_name )
                                and member_type='host')
        where member_name = i.member_name;
end loop;
end;
/

update apds_admin.apds_exadata_dtl 
set exadata_family =
 (case 
        when cluster_name in ('Prod-A','Prod-B','Prod-C','Prod-D','Dev-A','Dev-B','Dev-D') then 'X4-2'
        when cluster_name in ('Prod-E','Dev-C','Dev-E','DR-A') then 'X5-2'
        when cluster_name in ('Prod-F','Prod-G','Prod-I','Prod-J','Dev-F','Dev-J','Dev-G','Dev-H','Dev-I','DR-B','DR-C','ZDLRA-A','ZDLRA-B','ZDLRA-C') then 'X6-2'
        when cluster_name in ('Prod-H','Dev-K','DR-A') then 'X7-2'
        else 'NEED-TO-UPDATE' end );

update apds_admin.apds_exadata_dtl
	set deployment_id = 2
	where cluster_name in ('Dev-G','Dev-H','Dev-I','Dev-K','DR-A','DR-B','DR-C','DR-D','ZDLRA-A','ZDLRA-B') ;

update apds_admin.apds_exadata_dtl
	set deployment_id = 3
	where cluster_name in ('Prod-D','Dev-D','ZDLRA-C');

update apds_admin.apds_exadata_dtl
set exadata_id =
    (case
         when instr(exadata_name,'dx04') > 0 then 1
         when instr(exadata_name,'px04') > 0 then 1
         when instr(exadata_name,'dx03') > 0 then 2
         when instr(exadata_name,'dx05') > 0 then 3
         when instr(exadata_name,'dx10') > 0 then 4
         when instr(exadata_name,'dx13') > 0 then 5
         when instr(exadata_name,'dx14') > 0 then 6
         when instr(exadata_name,'px01') > 0 then 7
         when instr(exadata_name,'px02') > 0 then 8
         when instr(exadata_name,'px08') > 0 then 9
         when instr(exadata_name,'px09') > 0 then 10
         when instr(exadata_name,'px15') > 0 then 11
         when instr(exadata_name,'fx07') > 0 then 12
         when instr(exadata_name,'fx11') > 0 then 13
         when instr(exadata_name,'fx12') > 0 then 14
         when instr(exadata_name,'mom9rx01') > 0 then 15
         when instr(exadata_name,'va10rx01') > 0 then 16
         when instr(exadata_name,'va33rx01') > 0 then 17
    end);

commit;

*/

--	APDS_ADMIN.APDS_EXADATA_CELL_SERVER

drop table apds_admin.apds_exadata_cell_server purge;

create table apds_admin.apds_exadata_cell_server (
	cell_id								varchar2(20),
	cell_server_name			varchar2(30),
	cell_server_version		varchar2(100),
	release_version				varchar2(100),
	cpu_count							number,
	ip_address1						varchar2(30),
	ip_address1_cidr			varchar2(10),
	ip_address2						varchar2(30),
	ip_address2_cidr			varchar2(10),
	ip_address3						varchar2(30),
	ip_address3_cidr			varchar2(10),
	ip_address4						varchar2(30),
	ip_address4_cidr			varchar2(10),
	kernel_version				varchar2(100),
	make_model						varchar2(100),
	fc_mode								varchar2(20),
	max_pd_iops						number,
	max_fd_iops						number,
	max_pd_mbps						number,
	max_fd_mbps						number,
	deployment_id					number,
	active_flag						char(1),
	env_flag							varchar2(10),
	record_src						varchar2(30),
	created_date					date		default 	sysdate,
	created_by						varchar2(30),
	last_updated_date			date		default		sysdate,
	last_updated_by				varchar2(30),
	constraint apds_exadata_cell_server_u1 primary key(cell_id,cell_server_name),
	constraint apds_exadata_cell_server_f1 foreign key(deployment_id) references apds_admin.apds_deployment(deployment_id)
);

drop table apds_admin.apds_exadata_cell_server_gt;
 
create global temporary table apds_admin.apds_exadata_cell_server_gt 
on commit preserve rows
as select * 
from apds_admin.apds_exadata_cell_server 
where 1=2;

/*

-- Source :

declare
begin
    for i in (select distinct id cell_id, name, max(ecm_snapshot_id) snap_id from SYSMAN.EM_EXADATA_CELL_E@apds_oms group by id, name) loop
        insert into apds_admin.apds_exadata_cell_server select id cell_id, name cell_server_name, cell_version, release_version, cpu_count,ip_address_1, cidr_prefix_size_1 ip_address1_cidr,
            ip_address_2, cidr_prefix_size_2 ip_address2_cidr, ip_address_3, cidr_prefix_size_3 ip_address3_cidr,
            ip_address_4, cidr_prefix_size_4 ip_address4_cidr, kernel_version, make_model, fc_mode, max_pd_iops, max_fd_iops, max_pd_mbps, max_fd_mbps,
						(case 
								when instr(name,'va33') > 0 then 2  
								when instr(name,'mom') > 0 then 3
								else 1
						end ),
            'Y',decode(instr(name,'dx'),0,decode(instr(name,'fx'),0,decode(instr(name,'rx'),0,'Prod','Prod-RA'),'DR'),'Non-Prod'),'GRID-CONTROL',sysdate,'APDS_ADMIN',sysdate,'APDS_ADMIN'
        from SYSMAN.EM_EXADATA_CELL_E@apds_oms
        where id=i.cell_id and name=i.name and ecm_snapshot_id=i.snap_id;
    end loop;
end;
/

commit;
*/

--	APDS_ADMIN.APDS_EXADATA_CELLDISK

drop table apds_admin.apds_exadata_celldisk purge;

create table apds_admin.apds_exadata_celldisk (
	cell_id						varchar2(20),
	cell_server_name	varchar2(30),
	cell_disk_name		varchar2(100),
	device_name				varchar2(100),
	device_partition	varchar2(100),
	config_key				varchar2(20),
	cd_size_gb						number,
	deployment_id			number,
	active_flag				char(1),
	env_flag					varchar2(10),
	record_src				varchar2(30),
	created_date			date		default		sysdate,
	created_by				varchar2(30),
	last_updated_date	date		default		sysdate,
	last_updated_by		varchar2(30),
	constraint apds_exadata_celldisk_u1 primary key(cell_id,cell_server_name,cell_disk_name,device_name),
	constraint apds_exadata_celldisk_f1 foreign key(deployment_id) references apds_admin.apds_deployment(deployment_id)
);

drop table apds_admin.apds_exadata_celldisk_gt purge;

create global temporary table apds_admin.apds_exadata_celldisk_gt 
on commit preserve rows
as select * 
from apds_admin.apds_exadata_celldisk 
where 1=2;

/*

-- Source :

insert into apds_admin.apds_exadata_celldisk select distinct cell_id, cell_name cell_server_name, name cell_disk_name, device_name, device_partition,config_key, cd_size,
						(case 
								when instr(name,'va33') > 0 then 2  
								when instr(name,'mom') > 0 then 3
								else 1
						end ),
            'Y',decode(instr(name,'dx'),0,decode(instr(name,'fx'),0,decode(instr(name,'rx'),0,'Prod','Prod-RA'),'DR'),'Non-Prod'),'GRID-CONTROL',sysdate,'APDS_ADMIN',sysdate,'APDS_ADMIN'
        from SYSMAN.EM_EXADATA_CELLDISK_E@apds_oms;
commit;

*/

--	APDS_ADMIN.APDS_EXADATA_FCACHE_DISK

drop table apds_admin.apds_exadata_fcachedisk purge;

create table apds_admin.apds_exadata_fcachedisk (
	cell_id						varchar2(20),
	cell_disk_name		varchar2(100),
	fcache_name				varchar2(30),
	config_key				varchar2(20),
	cache_size_gb			number,
	deployment_id			number,
	active_flag				char(1),
	env_flag					varchar2(10),
	record_src				varchar2(30),
	created_date			date		default		sysdate,
	created_by				varchar2(30),
	last_updated_date	date		default		sysdate,
	last_updated_by		varchar2(30),
	constraint apds_exadata_fcachedisk_u1 primary key(cell_id,cell_disk_name,fcache_name),
	constraint apds_exadata_fcachedisk_f1 foreign key(deployment_id) references apds_admin.apds_deployment(deployment_id)
);

drop table apds_admin.apds_exadata_fcachedisk_gt purge;

create global temporary table apds_admin.apds_exadata_fcachedisk_gt 
on commit preserve rows
as select * 
from apds_admin.apds_exadata_fcachedisk 
where 1=2;

/*

-- Source :

begin
	for i in (select distinct cell_id, cell_name cell_disk_name, name fcache_name, config_key, effective_cache_size cache_size_gb	from sysman.em_exadata_fcache_e@apds_oms) loop
	begin
		insert into apds_admin.apds_exadata_fcachedisk values (i.cell_id, i.cell_disk_name, i.fcache_name,i.config_key, i.cache_size_gb,
						(case 
								when instr(i.cell_disk_name,'va33') > 0 then 2  
								when instr(i.cell_disk_name,'mom') > 0 then 3
								else 1
						end ),
            'Y',decode(instr(i.cell_disk_name,'dx'),0,decode(instr(i.cell_disk_name,'fx'),0,decode(instr(i.cell_disk_name,'rx'),0,'Prod','Prod-RA'),'DR'),'Non-Prod'),'GRID-CONTROL',sysdate,'APDS_ADMIN',sysdate,'APDS_ADMIN');
	exception
		when DUP_VAL_ON_INDEX then
			null;
	end;
	end loop;
end;
/ 

commit;

*/      

--	APDS_ADMIN.APDS_EXADATA_GRIDDISK

drop table apds_admin.apds_exadata_griddisk purge;

create table apds_admin.apds_exadata_griddisk (
	cell_id						varchar2(20),
	cell_server_name	varchar2(30),
	cell_disk_name		varchar2(100),
	grid_disk_name		varchar2(30),
	config_key				varchar2(20),
	disk_group				varchar2(100),
	gd_size_mb				number,
	is_sparse					varchar2(10),
	deployment_id			number,
	active_flag				char(1),
	env_flag					varchar2(10),
	record_src				varchar2(30),
	created_date			date		default 	sysdate,
	created_by				varchar2(30),
	last_updated_date	date		default		sysdate,
	last_updated_by		varchar2(30),
	constraint apds_exadata_griddisk_u1 primary key(cell_id,cell_server_name,cell_disk_name,grid_disk_name),
	constraint apds_exadata_griddisk_f1 foreign key(deployment_id) references apds_admin.apds_deployment(deployment_id)
);

drop table apds_admin.apds_exadata_griddisk_gt purge;

create global temporary table apds_admin.apds_exadata_griddisk_gt 
on commit preserve rows
as select * 
from apds_admin.apds_exadata_griddisk 
where 1=2;

/*
-- Source :

begin
	for i in (select distinct cell_id, cell_name cell_server_name, cell_disk cell_disk_name, name grid_disk_name,config_key, diskgroup disk_group, gd_size gd_size_mb,is_sparse from SYSMAN.EM_EXADATA_GRIDDISK_E@apds_oms) loop
	begin
		insert into apds_admin.apds_exadata_griddisk values (i.cell_id, i.cell_server_name, i.cell_disk_name, i.grid_disk_name,i.config_key, i.disk_group, i.gd_size_mb,i.is_sparse,
						(case 
								when instr(i.cell_server_name,'va33') > 0 then 2  
								when instr(i.cell_server_name,'mom') > 0 then 3
								else 1
						end ),
            'Y',decode(instr(i.cell_server_name,'dx'),0,decode(instr(i.cell_server_name,'fx'),0,decode(instr(i.cell_server_name,'rx'),0,'Prod','Prod-RA'),'DR'),'Non-Prod'),'GRID-CONTROL',sysdate,'APDS_ADMIN',sysdate,'APDS_ADMIN');
	exception
		when DUP_VAL_ON_INDEX then
			null;
	end;
	end loop;
end;
/ 
        
commit;

*/

--	APDS_ADMIN.APDS_HOST

drop table apds_admin.apds_host purge;

create table apds_admin.apds_host (
	host_name							varchar2(100) ,
	os										varchar2(100),
	clock_freq_mhz				number,
	domain								varchar2(30),
	memory_mb							number,
	local_disk_gb					number,
	cpu_count							number,
	physical_cpu_count		number,
	logical_cpu_count			number,
	total_cpu_cores				number,
	machine_architecture	varchar2(30),
	system_config					varchar2(30),
	vendor_name						varchar2(100),
	os_vendor							varchar2(30),
	virtual								varchar2(30),
	exadata_id						number	default 1,
	exadata_cluster				varchar2(30)	default NULL,
	exadata_flag					char(1),
	comments							varchar2(250),
	deployment_id					number,
	active_flag						char(1),
	env_flag							varchar2(10),
	record_src						varchar2(30),
	created_date					date		default 	sysdate,
	created_by						varchar2(30),
	last_updated_date			date		default		sysdate,
	last_updated_by				varchar2(30),
  constraint apds_host_u1 primary key(host_name),
	constraint apds_host_f1 foreign key(deployment_id) references apds_admin.apds_deployment(deployment_id)
);

create global temporary table apds_admin.apds_host_gt 
on commit preserve rows
as select * 
from apds_admin.apds_host 
where 1=2;

/*
-- Source :

insert into apds_admin.apds_host select host_name, os_summary os, freq, domain, mem, disk,cpu_count,physical_cpu_count, logical_cpu_count,total_cpu_cores, ma, system_config, vendor_name, os_vendor, virtual,
						decode(dbm_member,1,'Y','N') exadata_flag, null,
				    (case 
				          when instr(host_name,'va33') > 0 then 2  
				          when instr(host_name,'mom') > 0 then 3
				          when instr(host_name,'aws') > 0 then 4
				          else 1
				     end ) deployment_id, 
     						'Y', decode(instr(host_name,'dx'),0,decode(instr(host_name,'fx'),0,decode(instr(host_name,'rx'),0,'Prod','Prod-RA'),'DR'),'Non-Prod'),'GRID-CONTROL',sysdate,'APDS_ADMIN',sysdate,'APDS_ADMIN'
        from sysman.MGMT$OS_HW_SUMMARY@apds_oms;

update apds_admin.apds_host
set env_flag=decode(substr(host_name,5,1),'p','Prod','Non-Prod')
where os like 'AIX%';

update apds_admin.apds_host
set virtual = 'Oracle Virtual Machine'
where host_name in (select host_name from sysman.EM_ALL_TARGETS@apds_oms
									where target_type='oracle_si_virtual_server');

commit;

-- Sandbox Exadata Hosts Manual Add

insert into apds_admin.apds_host values('va10dx0601.wellpoint.com',null,null,null,null,null,null,null,null,null,null,null,'Oracle Corporation','Oracle','No','Y',null,1,'Y','Non-Prod','MANUAL',sysdate,'APDS_ADMIN',sysdate,'APDS_ADMIN');
insert into apds_admin.apds_host values('va10dx0602.wellpoint.com',null,null,null,null,null,null,null,null,null,null,null,'Oracle Corporation','Oracle','No','Y',null,1,'Y','Non-Prod','MANUAL',sysdate,'APDS_ADMIN',sysdate,'APDS_ADMIN');
commit;

-- Non Exadata Host Records in InfoHub not in Grid Control

insert into apds_admin.apds_host 
    select distinct server_nm, null, null, null, null, null,null,null, null,null, null, null, null, null, null,'N',null,
            (case 
		          when instr(server_nm,'va33') > 0 then 2  
		          when instr(server_nm,'mom') > 0 then 3
		          when instr(server_nm,'aws') > 0 then 4
                  else 1
             end ) deployment_id, 
                    'Y', decode(production_ind,'Y','Prod','Non-Prod') env_flag,'INFOHUB',sysdate,'APDS_ADMIN',sysdate,'APDS_ADMIN'
    from capacity_prod.all_databases@infohub 
    where upper(server_nm) not in (select upper(nvl(substr((host_name),1,instr((host_name),'.')-1),host_name)) from apds_admin.apds_host);
        
commit;

*/

--	APDS_ADMIN.APDS_CLUSTER

drop table apds_admin.apds_cluster purge;

create table apds_admin.apds_cluster (
	cluster_name				varchar2(30),
	host_name						varchar2(100),
	node_number					number,
	version							varchar2(30),
	crs_home						varchar2(100),
	comments						varchar2(250),
	deployment_id				number,
	active_flag					char(1),
	env_flag						varchar2(10),
	record_src					varchar2(30),
	created_date				date		default 	sysdate,
	created_by					varchar2(30),
	last_updated_date		date		default		sysdate,
	last_updated_by			varchar2(30),
	constraint apds_cluster_u1 primary key(cluster_name,host_name),
	constraint apds_cluster_f1 foreign key(deployment_id) references apds_admin.apds_deployment(deployment_id)
);

create global temporary table apds_admin.apds_cluster_gt 
on commit preserve rows
as select * 
from apds_admin.apds_cluster 
where 1=2;

/*

-- Source :

insert into apds_admin.apds_cluster select distinct cm_target_name cluster_name, host_name,node_num node_number,software_version version,crs_home,null,
							    (case 
							          when instr(host_name,'va33') > 0 then 2  
							          when instr(host_name,'mom') > 0 then 3
							          when instr(host_name,'aws') > 0 then 4
							          else 1
							     end ) deployment_id,
	                  'Y',decode(instr(host_name,'dx'),0,decode(instr(host_name,'fx'),0,decode(instr(host_name,'rx'),0,'Prod','Prod-RA'),'DR'),'Non-Prod'),'GRID-CONTROL',sysdate,'APDS_ADMIN',sysdate,'APDS_ADMIN'
        from sysman.CM$MGMT_CLUSTER_CSS_NODES_ECM@apds_oms;

update apds_admin.apds_cluster
set env_flag=decode(substr(host_name,5,1),'h','Non-Prod')
where host_name like 'vaathm%';

commit;

*/

--	APDS_ADMIN.APDS_ASM

drop table apds_admin.apds_asm purge;

create table apds_admin.apds_asm (
	asm_target_name		varchar2(50),
	asm_instance			varchar2(10),
	host_name					varchar2(100),
	version						varchar2(100),
	exadata_flag			char(1),
	active_flag				char(1),
	env_flag					varchar2(10),
	record_src				varchar2(30),
	created_date			date		default 	sysdate,
	created_by				varchar2(30),
	last_updated_date	date		default		sysdate,
	last_updated_by		varchar2(30),
	constraint apds_asm_u1 primary key (asm_target_name)
);

create global temporary table apds_admin.apds_asm_gt 
on commit preserve rows
as select * 
from apds_admin.apds_asm 
where 1=2;

/*

-- Source :

insert into apds_admin.apds_asm SELECT target_name asm_target_name, substr(target_name,1,5) asm_instance,  host_name,category_prop_1 version,decode(category_prop_3,'exadata','Y','N') exadata_flag,
            'Y',decode(instr(host_name,'dx'),0,decode(instr(host_name,'fx'),0,decode(instr(host_name,'rx'),0,'Prod','Prod-RA'),'DR'),'Non-Prod'),'GRID-CONTROL',sysdate,'APDS_ADMIN',sysdate,'APDS_ADMIN'
        from SYSMAN.EM_ALL_TARGETS@apds_oms where target_type='osm_instance';

update apds_admin.apds_asm
set env_flag=decode(substr(host_name,5,1),'h','Non-Prod')
where host_name like 'vaathm%';

commit;

*/ 

--	APDS_ADMIN.APDS_ASM_CLIENT

drop table apds_admin.apds_asm_client purge;

create table apds_admin.apds_asm_client (
	asm_target_name		varchar2(50),
	database_name			varchar2(50),
	instance_name			varchar2(30),
	diskgroup					varchar2(30),
	active_flag				char(1),
	env_flag					varchar2(10),
	record_src				varchar2(30),
	created_date			date		default 	sysdate,
	created_by				varchar2(30),
	last_updated_date	date		default		sysdate,
	last_updated_by		varchar2(30),
	constraint apds_asm_client_u1 primary key (asm_target_name,database_name,diskgroup)	
);

create global temporary table apds_admin.apds_asm_client_gt 
on commit preserve rows
as select * 
from apds_admin.apds_asm_client 
where 1=2;

/*

-- Source :

insert into apds_admin.apds_asm_client select distinct cm_target_name asm_target_name, db_name database_name, instance_name, diskgroup,
            'Y',decode(instr(cm_target_name,'dx'),0,decode(instr(cm_target_name,'fx'),0,decode(instr(cm_target_name,'rx'),0,'Prod','Prod-RA'),'DR'),'Non-Prod') env_flag,'GRID-CONTROL',sysdate,'APDS_ADMIN',sysdate,'APDS_ADMIN'
        from sysman.CM$MGMT_ASM_CLIENT_ECM@apds_oms;

commit;

*/

-- ADPS_ADMIN.APDS_BCP_CONFIG

drop table apds_admin.apds_bcp_config purge;

create table apds_admin.apds_bcp_config (
	bcp_tier					varchar2(10),
	rpo_config				varchar2(100), 
	rto_config				varchar2(100),
	description				varchar2(500),
	comments					varchar2(250), 
	record_src				varchar2(30)	default 'MANUAL',
	created_date			date					default	sysdate,
	created_by				varchar2(30)	default	'APDS_ADMIN',
	last_updated_date	date					default	sysdate,
	last_updated_by		varchar2(30)	default 'APDS_ADMIN',
	constraint apds_bcp_config_u1 primary key (bcp_tier)
);

insert into apds_admin.apds_bcp_config values('TIER-0','0 Minutes','< 1 Minute','Core IT Infrastructure, Network, Security, and Strategic Critical Applications supporting Target State Environment. Geographically distributed High Availability (HA) (e.g. Active directory, Building Access Security) Enhanced Availability and Resiliency',null,null,null,null,null,null);
insert into apds_admin.apds_bcp_config values('TIER-1','15 Minutes','< 4 Hours','Strategic-Critical Applications supporting Operational Environments (e.g. Security, Identity Access, Communications) foundational infrastructure and time critical business functions (e.g. Treasury and Workforce Management)',null,null,null,null,null,null);
insert into apds_admin.apds_bcp_config values('TIER-2','15-60 Minutes','< 12 Hours','Mission Critical Core Application tiered by business process criticality (e.g.  Care Management, Customer Service, Public Affairs,Enrollment)',null,null,null,null,null,null);
insert into apds_admin.apds_bcp_config values('TIER-3','24 Hours','< 24 Hours','Core Application tiered by business process criticality. (e.g. Claims processing, EDI, Print Mail,Compliance)',null,null,null,null,null,null);
insert into apds_admin.apds_bcp_config values('TIER-4','24 Hours','< 72 Hours','Core Application tiered by business process criticality (e.g. Reporting and Analytic applications)',null,null,null,null,null,null);
insert into apds_admin.apds_bcp_config values('TIER-5','24 Hours','< 72 Hours','Core Application tiered by business process criticality (e.g. project management and content management)',null,null,null,null,null,null);
insert into apds_admin.apds_bcp_config values('TIER-6','24 Hours','< 72 Hours','Used only in cases where an application will be retired within 6-12 months or non-critical capabilities',null,null,null,null,null,null);
commit;

-- ADPS_ADMIN.APDS_DATABASE

drop table apds_admin.apds_database purge;

create table apds_admin.apds_database (
	database_name			varchar2(50),
	database_type			varchar2(10), 
	instance_type			varchar2(30),
	multitenant_name	varchar2(30),
	log_mode 					varchar2(12),
	version						varchar2(100),
	host_name					varchar2(100),
	database_role			varchar2(30), 
	dr_database_name	varchar2(100),
	bcp_tier					varchar2(10)	default	'TIER-3',
	comments					varchar2(250),
	deployment_id			number,
	security_flag			char(1),
	audit_flag				char(1),
	active_flag				char(1),
	env_flag					varchar2(10),
	capture_flag			char(1),
	record_src				varchar2(30),
	created_date			date		default 	sysdate,
	created_by				varchar2(30),
	last_updated_date	date		default		sysdate,
	last_updated_by		varchar2(30),
	constraint apds_database_u1 primary key (database_name,host_name),
	constraint apds_database_f1 foreign key(deployment_id) references apds_admin.apds_deployment(deployment_id),
	constraint apds_database_f2 foreign key(bcp_tier) references apds_admin.apds_bcp_config(bcp_tier)
);

drop table apds_admin.apds_database_gt purge;

create global temporary table apds_admin.apds_database_gt 
on commit preserve rows
as select * 
from apds_admin.apds_database 
where 1=2;

/*
-- Source :

insert into apds_admin.apds_database SELECT distinct t1.target_name database_name, 
        decode(t1.target_type,'rac_database','RAC-DB','oracle_database',decode(t1.category_prop_5,'FullLLFile+CDB','CDB','DB'),'oracle_pdb','PDB') database_type,
        decode(t1.category_prop_3,'RACINST','RAC-INSTANCE',decode(t1.target_type,'oracle_database','SINGLE-INSTANCE',upper(t1.target_type))) instance_type, null multitenant_name,null log_mode,
        t1.category_prop_1 version,t1.host_name,'PRIMARY' database_role,null dr_database_name,null bcp_tier,null comments,
		    (case 
		          when instr(t1.host_name,'va33') > 0 then 2  
		          when instr(t1.host_name,'mom') > 0 then 3
		          when instr(t1.host_name,'aws') > 0 then 4
		          else 1
		     end ) deployment_id,
        null, null,'Y',decode(instr(t1.host_name,'dx'),0,decode(instr(t1.host_name,'fx'),0,decode(instr(t1.host_name,'rx'),0,'Prod','Prod-RA'),'DR'),'Non-Prod') env_flag,'Y','GRID-CONTROL',sysdate,'APDS_ADMIN',sysdate,'APDS_ADMIN'
        FROM SYSMAN.EM_ALL_TARGETS@apds_oms t1
        WHERE t1.target_type in ('oracle_database','rac_database','oracle_pdb');
        
update apds_admin.apds_database
set env_flag=decode(substr(host_name,5,1),'p','Prod','Non-Prod')
where host_name like 'vaa%';

update apds_admin.apds_database
set env_flag=decode(substr(host_name,5,1),'p','Prod','Non-Prod')
where host_name like 'va10%';

update apds_admin.apds_database
set env_flag=decode(substr(host_name,5,1),'p','Prod','Non-Prod')
where host_name like 'mom%';

commit;

declare
begin
    for i in (select db_unique_name,stby_list,role from apds_admin.apds_database, SYSMAN.MGMT$HA_DG_TARGET_SUMMARY@apds_oms where db_unique_name=database_name  and using_broker='YES') loop
        update apds_admin.apds_database
            set database_role=i.role, dr_database_name=i.stby_list
        where database_name=i.db_unique_name;
    end loop;
end;
/

commit;

-- Database Records in InfoHub not in Grid Control

insert into apds_admin.apds_database 
    SELECT database_nm database_name,'DB',null,null,null log_mode,null,server_nm host_name,null,null,null bcp_tier,null,
		    (case 
		          when instr(server_nm,'va33') > 0 then 2  
		          when instr(server_nm,'mom') > 0 then 3
		          when instr(server_nm,'aws') > 0 then 4
		          else 1
		     end ) deployment_id,
        null, null,'Y', decode(production_ind,'Y','Prod','Non-Prod') env_flag, decode(production_ind,'Y','Y','N') capture_flag,'INFOHUB',sysdate,'APDS_ADMIN',sysdate,'APDS_ADMIN'
        from capacity_prod.all_databases@apds_infohub 
        where upper(database_nm) not in (select upper(database_name) from apds_admin.apds_database) AND
              upper(database_nm) not in (select  upper((case when regexp_instr(database_name,'[_|.]') > 0 then substr(database_name,regexp_instr(database_name,'[_|.]')+1) 
                  										else database_name 
            						end )) database_name from apds_admin.apds_database);

update apds_admin.apds_database
set bcp_tier = decode(env_flag,'Prod','TIER-2','Non-Prod','TIER-5')
where bcp_tier is null;

update apds_database
set multitenant_name = (case when regexp_instr(database_name,'[_|.]') > 0 then substr(database_name,1,regexp_instr(database_name,'[_|.]')-1) 
                  			else database_name 
            						end );
commit;

*/

--	APDS_ADMIN.APDS_ASM_DB_INSTANCE

drop table apds_admin.apds_db_instance purge;

create table apds_admin.apds_db_instance (
	database_name			varchar2(50),
	host_name					varchar2(100),
	instance_name			varchar2(100),
	instance_type			varchar2(30), 
	sga_gb						number,
	cpu_count					number,
	archive_lag				number,
	comments					varchar2(250),
	deployment_id			number,
	active_flag				char(1),
	env_flag					varchar2(10),
	record_src				varchar2(30),
	created_date			date		default 	sysdate,
	created_by				varchar2(30),
	last_updated_date	date		default		sysdate,
	last_updated_by		varchar2(30),
	constraint apds_db_instance_u1 primary key (database_name,host_name,instance_name)
);

drop table apds_admin.apds_db_instance_gt purge;

create global temporary table apds_admin.apds_db_instance_gt 
on commit preserve rows
as select * 
from apds_admin.apds_db_instance 
where 1=2;

/*

-- Source :

insert into apds_admin.apds_db_instance SELECT distinct database_name,host_name,instance_name,null instance_type, null sga_gb,null cpu_count, null archive_lag,null,
		 (case 
        when instr(host_name,'va33') > 0 then 2  
        when instr(host_name,'mom') > 0 then 3
        when instr(host_name,'aws') > 0 then 4
            else 1
     end ) deployment_id, 
    'Y',decode(instr(t1.host_name,'dx'),0,decode(instr(t1.host_name,'fx'),0,decode(instr(t1.host_name,'rx'),0,'Prod','Prod-RA'),'DR'),'Non-Prod') env_flag,'GRID-CONTROL',sysdate,'APDS_ADMIN',sysdate,'APDS_ADMIN'
    FROM SYSMAN.MGMT$DB_DBNINSTANCEINFO_ALL@apds_oms t1
    WHERE target_type in ('oracle_database') 
    order by instance_name;
    
commit;

-- Instance Records in InfoHub not in Grid Control

insert into apds_admin.apds_db_instance
    SELECT database_nm database_name,server_nm host_name,instance_nm instance_name,null instance_type, null sga_gb,null cpu_count, null archive_lag,null,
		    (case 
		          when instr(server_nm,'va33') > 0 then 2  
		          when instr(server_nm,'mom') > 0 then 3
		          when instr(server_nm,'aws') > 0 then 4
		          else 1
		     end ) deployment_id,
        'Y', decode(production_ind,'Y','Prod','Non-Prod') env_flag,'INFOHUB',sysdate,'APDS_ADMIN',sysdate,'APDS_ADMIN'
        from capacity_prod.all_databases@apds_infohub 
        where upper(database_nm) not in (select upper(database_name) from apds_admin.apds_db_instance);
commit;

update apds_admin.apds_db_instance
set env_flag=decode(substr(host_name,5,1),'p','Prod','Non-Prod')
where host_name in (select host_name from apds_admin.apds_host where os like 'AIX%');

*/

--	APDS_ADMIN.APDS_ASM_LISTENER

drop table apds_admin.apds_listener purge;

create table apds_admin.apds_listener (
	listener_name			varchar2(100),
	host_name					varchar2(100),
	listener_port			number,
	listener_protocol	varchar2(10),
	deployment_id			number, 
	active_flag				char(1),
	env_flag					varchar2(10),
	record_src				varchar2(30),
	created_date			date		default 	sysdate,
	created_by				varchar2(30),
	last_updated_date	date		default		sysdate,
	last_updated_by		varchar2(30),
	constraint apds_listener_u1 primary key (listener_name,host_name,listener_port),
	constraint apds_listener_f1 foreign key(deployment_id) references apds_admin.apds_deployment(deployment_id)
);

create global temporary table apds_admin.apds_listener_gt 
on commit preserve rows
as select * 
from apds_admin.apds_listener 
where 1=2;

/*

-- Source :

insert into apds_admin.apds_listener
    select target_name listener_name, host_name, listener_port,listener_protocol,
            (case 
		          when instr(host_name,'va33') > 0 then 2  
		          when instr(host_name,'mom') > 0 then 3
		          when instr(host_name,'aws') > 0 then 4
                  else 1
             end ) deployment_id, 
             'Y', decode(instr(host_name,'dx'),0,decode(instr(host_name,'fx'),0,decode(instr(host_name,'rx'),0,'Prod','Prod-RA'),'DR'),'Non-Prod') env_flag,'GRID-CONTROL',sysdate,'APDS_ADMIN',sysdate,'APDS_ADMIN'
    from sysman.em_all_targets@apds_oms l, sysman.mgmt_listener_ports_ecm@apds_oms p 
    where target_type='oracle_listener'
    and l.host_name=p.machine_name;
    
commit;      

*/

--	APDS_ADMIN.APDS_ORACLE_SOFTWARE

drop table apds_admin.apds_oracle_software purge;

create table apds_admin.apds_oracle_software(
	host_name						varchar2(100),
	software_home				varchar2(1024),
	home_name						varchar2(256), 
	orainventory_loc		varchar2(1024),
	home_owner					varchar2(30),
	home_group					varchar2(30),
	patch_id						varchar2(128),
	patch_upi						varchar2(256),
	patch_install_date	date,
	patch_desc					varchar2(1024),
	comments						varchar2(250),
	deployment_id				number,
	active_flag					char(1),
	env_flag						varchar2(10),
	record_src					varchar2(30),
	created_date				date		default 	sysdate,
	created_by					varchar2(30),
	last_updated_date		date		default		sysdate,
	last_updated_by			varchar2(30),
	constraint apds_oracle_software_u1 primary key(host_name,software_home,home_name,patch_id)
);

create global temporary table apds_admin.apds_oracle_software_gt 
on commit preserve rows
as select * 
from apds_admin.apds_oracle_software 
where 1=2;

/*

-- Source :

insert into apds_admin.apds_oracle_software SELECT h.host_name, h.home_location software_home, nvl(h.oui_home_name,'NOT-DEFINED') home_name, h.home_pointer orainventory_loc, h.oh_owner home_owner,h.oh_group home_group,
    p.patch_id, p.patch_upi,p.install_time patch_install_time, p.description patch_desc,
    null, (case 
		          when instr(h.host_name,'va33') > 0 then 2  
		          when instr(h.host_name,'mom') > 0 then 3
		          when instr(h.host_name,'aws') > 0 then 4
                  else 1
             end ) deployment_id, 
    'Y',decode(instr(h.host_name,'dx'),0,decode(instr(h.host_name,'fx'),0,decode(instr(h.host_name,'rx'),0,'Prod','Prod-RA'),'DR'),'Non-Prod') env_flag,'GRID-CONTROL',sysdate,'APDS_ADMIN',sysdate,'APDS_ADMIN'
    FROM SYSMAN.MGMT$OH_HOME_INFO@apds_oms h, SYSMAN.MGMT$OH_PATCH@apds_oms p
  where h.host_name = p.host_name 
  and h.home_location = p.home_location
  order by h.host_name;

commit; 

*/

--	APDS_ADMIN.APDS_APPLICATION

drop table apds_admin.apds_application purge;

create table apds_admin.apds_application (
	application_name	varchar2(100),
	application_desc	varchar2(2000),
	application_sme		varchar2(100),
	database_name			varchar2(30),
	comments					varchar2(250),
	active_flag				char(1),
	record_src				varchar2(30),
	created_date			date		default 	sysdate,
	created_by				varchar2(30),
	last_updated_date	date		default		sysdate,
	last_updated_by		varchar2(30),
	constraint apds_application_u1 primary key (application_name,database_name)		
);

create global temporary table apds_admin.apds_application_gt 
on commit preserve rows
as select * 
from apds_admin.apds_application
where 1=2;

/*

-- Source : Get from Topoprd.

insert into apds_admin.apds_application
		select distinct a.application_nm, a.application_desc,null,d.database_nm,
		null,'Y','INFOHUB',sysdate,'APDS_ADMIN',sysdate,'APDS_ADMIN'
		from wdbs.applications@infohub a, wdbs.databases@infohub d, 
		        (select distinct application_key, database_key 
		    from wdbs.app_db_xref@infohub
		    where database_key in (
		        select database_key 
		        from wdbs.databases@infohub i, apds_admin.apds_database d
		        where upper(d.database_name)=upper(i.database_nm))) akey
		where a.application_key = akey.application_key
		 and  akey.database_key = d.database_key
		 and  a.retired='N'
		order by database_nm;

commit;

*/

--	APDS_ADMIN.APDS_GOLDENGATE

drop table apds_admin.apds_goldengate purge;

create table apds_admin.apds_goldengate(
	process_name			varchar2(50),
	process_type			varchar2(30),
	gg_version				varchar2(30),
	host_name					varchar2(100),
	comments					varchar2(250),
	deployment_id			number,
	active_flag				char(1),
	env_flag					varchar2(10),
	record_src				varchar2(30),
	created_date			date		default 	sysdate,
	created_by				varchar2(30),
	last_updated_date	date		default		sysdate,
	last_updated_by		varchar2(30),
	constraint apds_goldengate_u1 primary key (process_name,host_name)		
);


/*
-- Source :

insert into apds_admin.apds_goldengate SELECT decode(instr(target_name,':',1,3),0,substr(target_name,instr(target_name,':',1)+1,instr(target_name,':',1,2)-instr(target_name,':')-1),
                substr(target_name,instr(target_name,':',1,3)+1)) process_name,
    decode(target_type,'oracle_goldengate_extract','Extract','oracle_goldengate_manager','Manager','oracle_goldengate_replicat','Replicat','OGG-VIP') process_type , 
    type_meta_ver gg_version,
    host_name,null,
    (case 
        when instr(host_name,'va33') > 0 then 2  
        when instr(host_name,'mom') > 0 then 3
        when instr(host_name,'aws') > 0 then 4
            else 1
     end ) deployment_id, 
    'Y',decode(instr(t1.host_name,'dx'),0,decode(instr(t1.host_name,'fx'),0,decode(instr(t1.host_name,'rx'),0,'Prod','Prod-RA'),'DR'),'Non-Prod') env_flag,'GRID-CONTROL',sysdate,'APDS_ADMIN',sysdate,'APDS_ADMIN'
    FROM SYSMAN.EM_ALL_TARGETS@apds_oms t1
	WHERE t1.target_type in ('oracle_goldengate','oracle_goldengate_extract','oracle_goldengate_manager','oracle_goldengate_replicat');
	
commit;

*/

============================================================================================================================================================================
Capacity Planning  Structures
-----------------------------

/*
-- Source for all CP Tables
		APDS_ADMIN_PKG.CAPATURE_INFO_PRC.
*/


--	APDS_ADMIN.APDS_CP_TABLESPACES

drop table apds_admin.apds_cp_tablespaces purge;

create table apds_admin.apds_cp_tablespaces(
	host_name									varchar2(100),
	database_name							varchar2(50),
	collection_date						date		default		sysdate,
	tablespace_name						varchar2(30),
	file_name									varchar2(512),
	alloted_space_gb					number,
	used_space_gb							number,
	free_space_gb							number,
	env_flag									varchar2(10),
	record_src								varchar2(30),
	created_date							date		default 	sysdate,
	created_by								varchar2(30),
	last_updated_date					date		default		sysdate,
	last_updated_by						varchar2(30),
	constraint apds_cp_tablespaces_u1 primary key (host_name, database_name, tablespace_name, file_name, collection_date))
partition by range (collection_date) interval(numtoyminterval(1,'month'))
subpartition by list (env_flag)
	subpartition template
	(subpartition p_non_prod values ('Non-Prod'),
	 subpartition p_prod		 values ('Prod'),
	 subpartition p_dr			 values ('DR'),
	 subpartition p_prod_ra  values ('Prod-RA'))
(  
	partition cp_tablespace values less than (to_date('01-01-2019','dd-mm-yyyy'))
);

--	APDS_ADMIN.APDS_CP_ARCHIVES

drop table apds_admin.apds_cp_archives purge;

create table apds_admin.apds_cp_archives(
	host_name							varchar2(100),
	database_name					varchar2(50),
	collection_date				date		default		sysdate,
	archived_date					date,
	log_switch_count			number,
	archive_space_mb			number,
	env_flag							varchar2(10),
	record_src						varchar2(30),	
	created_date					date		default 	sysdate,
	created_by						varchar2(30),
	last_updated_date			date		default		sysdate,
	last_updated_by				varchar2(30),
	constraint apds_cp_archives_u1 primary key (host_name,database_name,archived_date,collection_date))
partition by range (collection_date) interval(NUMTODSINTERVAL(1,'day'))
subpartition by list (env_flag)
	subpartition template
	(subpartition p_non_prod values ('Non-Prod'),
	 subpartition p_prod		 values ('Prod'),
	 subpartition p_dr			 values ('DR'),
	 subpartition p_prod_ra  values ('Prod-RA'))
(  
	partition cp_archives values less than (to_date('01-01-2019','dd-mm-yyyy'))
);

/*
create index apds_admin.apds_cp_archives_i1 on 
apds_admin.apds_cp_archives(database_name,archived_date)
/
*/
drop table apds_admin.apds_cp_archives_gt;

create global temporary table apds_admin.apds_cp_archives_gt 
on commit preserve rows
as select * 
from apds_admin.apds_cp_archives 
where 1=2;

-- Patch Registry Table

drop table apds_admin.apds_cp_dbpatches purge;

create table apds_admin.apds_cp_dbpatches (
	host_name							varchar2(100),
	database_name					varchar2(50),
	collection_date				date		default		sysdate,
	patch_id							number,
	patch_uid							number,
	bundle_id							number,
	bundle_series					varchar2(30),
	description						varchar2(100),
	version								varchar2(30),
	status								varchar2(15),
	action_time						timestamp(6),
	action								varchar2(30),
	env_flag							varchar2(10),
	record_src						varchar2(30),
	created_date					date		default 	sysdate,
	created_by						varchar2(30),
	last_updated_date			date		default		sysdate,
	last_updated_by				varchar2(30),
	constraint apds_cp_dbpatches_u1 primary key (database_name, collection_date,action_time))
partition by range (collection_date)	interval(numtoyminterval(1,'month'))
subpartition by list (env_flag)
	subpartition template
	(subpartition p_non_prod values ('Non-Prod'),
	 subpartition p_prod		 values ('Prod'),
	 subpartition p_dr			 values ('DR'),
	 subpartition p_prod_ra  values ('Prod-RA'))
(partition cp_dbpatches values less than (to_date('01-01-2019','dd-mm-yyyy'))
);

drop table apds_admin.apds_cp_dbpatches_gt;

create global temporary table apds_admin.apds_cp_dbpatches_gt 
on commit preserve rows
as select * 
from apds_admin.apds_cp_dbpatches
where 1=2;

-- SGA Table

drop table apds_admin.apds_cp_sga purge;

create table apds_admin.apds_cp_sga (
	host_name							varchar2(100),
	database_name					varchar2(50),
	instance_name					varchar2(100),
	collection_date				date		default		sysdate,
	shared_pool_mb				number,
	db_buffers_mb					number,
	log_buffers_mb				number,
	env_flag							varchar2(10),
	record_src						varchar2(30),
	created_date					date		default 	sysdate,
	created_by						varchar2(30),
	last_updated_date			date		default		sysdate,
	last_updated_by				varchar2(30),
	constraint apds_cp_sga_u1 primary key (database_name,instance_name,collection_date))
partition by range (collection_date) 	interval(numtoyminterval(1,'month'))
subpartition by list (env_flag)
	subpartition template
	(subpartition p_non_prod values ('Non-Prod'),
	 subpartition p_prod		 values ('Prod'),
	 subpartition p_dr			 values ('DR'),
	 subpartition p_prod_ra  values ('Prod-RA'))
(partition cp_sga values less than (to_date('01-01-2019','dd-mm-yyyy'))
);

drop table apds_admin.apds_cp_goldengate purge;

-- Source :
/*
   Write Capture Code to populate table.
*/

create table apds_admin.apds_cp_goldengate(
	host_name	 						varchar2(100) not null,
	database_name					varchar2(50) 	not null,
	collection_date				date		default		sysdate,
	gg_process 						varchar2(8)  	not null,
	from_table 						varchar2(100)    null,
	to_table 							varchar2(100)    null,
	inserts 							number 	null,
	updates 							number 	null,
	deletes 							number 	null,
	discards							number 	null,
	truncates 						number 	null,
	total 								number 	null,
	active_flag						char(1),
	env_flag							varchar2(10),
	record_src						varchar2(30),	
	created_date					date		default 	sysdate,
	created_by						varchar2(30),
	last_updated_date			date		default		sysdate,
	last_updated_by				varchar2(30),
	constraint apds_cp_goldengate_u1 primary key (database_name,collection_date))
)
partition by range (collection_date) interval(numtoyminterval(1,'month'))
(  
	partition apds_cp_goldengate_tseed values less than (to_date('01-01-2019','dd-mm-yyyy'))
);


-- Logging Table

drop table apds_admin.apds_log purge;

create table apds_admin.apds_log (
	log_id					number generated by default on null as identity,
	program_name		varchar2(100),
	log_severity		varchar2(15),
	log_date				date default sysdate,
	log_message			varchar2(1000))
partition by range (log_date)
	interval(numtoyminterval(1,'month'))
(partition apds_log_seed values less than (to_date('01-01-2019','dd-mm-yyyy'))
);


-- Job Control Table
-- 	job_type			-	Prod P, NonProd N, Others X
--	job_run_flag	- Monthly M, Daily D, Others X

drop table apds_admin.apds_job_control purge;

create table apds_admin.apds_job_control (
	job_module			varchar2(30),
	job_name				varchar2(100),
	job_type				char(1),
	job_run_flag		char(1),
	job_start_date	date,
	job_end_date		date,
	job_status			varchar2(10),
	job_error_count	number,
	job_parameters	varchar2(250),
	comments				varchar2(500),
	constraint  apds_job_control_u1 primary key (job_module,job_name,job_type,job_run_flag),
	constraint	job_status_c1	check (job_status in ('RUNNING','COMPLETED','ERRORED'))
);

Production Runs
---------------
insert into apds_admin.apds_job_control values ('CAPACITY_PLANNING_SYSTEM','CAPTURE_CAPACITY_INFO','P','D',sysdate,sysdate,'COMPLETED',0,'Prod Environments with Daily Flag',null);
insert into apds_admin.apds_job_control values ('CAPACITY_PLANNING_SYSTEM','CAPTURE_TABLESPACE_INFO','P','D',sysdate,sysdate,'COMPLETED',0,'Prod Environments with Daily Flag',null);
insert into apds_admin.apds_job_control values ('CAPACITY_PLANNING_SYSTEM','CAPTURE_CAPACITY_INFO','P','M',sysdate,sysdate,'COMPLETED',0,'Prod Environments with Daily Flag',null);
insert into apds_admin.apds_job_control values ('CAPACITY_PLANNING_SYSTEM','CAPTURE_ARCHIVE_INFO','P','M',sysdate,sysdate,'COMPLETED',0,'Prod Environments with Monthly Flag',null);
insert into apds_admin.apds_job_control values ('CAPACITY_PLANNING_SYSTEM','CAPTURE_PATCH_INFO','P','M',sysdate,sysdate,'COMPLETED',0,'Prod Environments with Monthly Flag',null);
insert into apds_admin.apds_job_control values ('CAPACITY_PLANNING_SYSTEM','CAPTURE_SGA_INFO','P','M',sysdate,sysdate,'COMPLETED',0,'Prod Environments with Monthly Flag',null);

Non-Production Runs
-------------------
insert into apds_admin.apds_job_control values ('CAPACITY_PLANNING_SYSTEM','CAPTURE_CAPACITY_INFO','N','D',sysdate,sysdate,'COMPLETED',0,'Non-Prod Environments with Daily Flag',null);
insert into apds_admin.apds_job_control values ('CAPACITY_PLANNING_SYSTEM','CAPTURE_TABLESPACE_INFO','N','D',sysdate,sysdate,'COMPLETED',0,'Non-Prod Environments with Daily Flag',null);
insert into apds_admin.apds_job_control values ('CAPACITY_PLANNING_SYSTEM','CAPTURE_CAPACITY_INFO','N','M',sysdate,sysdate,'COMPLETED',0,'Non-Prod Environments with Daily Flag',null);
insert into apds_admin.apds_job_control values ('CAPACITY_PLANNING_SYSTEM','CAPTURE_ARCHIVE_INFO','N','M',sysdate,sysdate,'COMPLETED',0,'Non-Prod Environments with Monthly Flag',null);
insert into apds_admin.apds_job_control values ('CAPACITY_PLANNING_SYSTEM','CAPTURE_PATCH_INFO','N','M',sysdate,sysdate,'COMPLETED',0,'Non-Prod Environments with Monthly Flag',null);
insert into apds_admin.apds_job_control values ('CAPACITY_PLANNING_SYSTEM','CAPTURE_SGA_INFO','N','M',sysdate,sysdate,'COMPLETED',0,'Non-Prod Environments with Monthly Flag',null);

insert into apds_admin.apds_job_control values ('CAPACITY_PLANNING_SYSTEM','PURGE_TABLE_INFO','X','X',sysdate,sysdate,'COMPLETED',0,'Executed on all runs',null);
insert into apds_admin.apds_job_control values ('INVENTORY_UPDATE_SYSTEM','UPDATE_INVENTORY_INFO','X','M',sysdate,sysdate,'COMPLETED',0,'Inventory of all Environments with Monthly Flag',null);

commit;
	
============================================================================================================================================================================
History Structures
------------------

drop table apds_admin.apds_hist_tablespaces purge;

-- Source :
-- SELECT host_name, target_name database_name, collection_timestamp, tablespace_name, contents, status, extent_management,allocation_type,logging,tablespace_size tablespace_size,initial_ext_size initial_extent,
--		next_extent,increment_by,max_extents,segment_space_management,block_size,big_file, encrypted
--	FROM SYSMAN.MGMT$DB_TABLESPACES_ALL

create table apds_admin.apds_hist_tablespaces(
	host_name									varchar2(30),
	database_name							varchar2(30),
	collection_date						date		default		sysdate,
	tablespace_name						varchar2(30),
	contents									varchar2(10),
	status										varchar2(10),
	extent_management					varchar2(10),
	allocation_type						varchar2(10),
	logging										varchar2(10),
	tablespace_size						number,
	initial_extent						number,
	next_extent								number,
	increment_by							number,
	max_extents								number,
	segment_space_management	varchar2(10),
	block_size								number,
	big_file									varchar2(3),
	encrypted									varchar2(3),
	created_date							date		default 	sysdate,
	created_by								varchar2(30),
	last_updated_date					date		default		sysdate,
	last_updated_by						varchar2(30),
	constraint apds_hist_tablespaces_u1 primary key (host_name, database_name, tablespace_name, collection_date)
);

drop table apds_admin.apds_hist_datafiles purge;

-- Source :
-- SELECT host_name, target_name database_name, collection_timestamp, tablespace_name, file_name, status, file_size file_size, autoextensible, increment_by, max_file_size
--	FROM SYSMAN.MGMT$DB_DATAFILES_ALL

create table apds_admin.apds_hist_datafiles(
	host_name							varchar2(30),
	database_name					varchar2(30),
	collection_date				date	default		sysdate,
	tablespace_name				varchar2(30),
	file_name							varchar2(512),
	status								varchar2(10),
	file_size							number,
	autoextensible				varchar2(3),
	increment_by					number,
	max_file_size					number,
	created_date					date		default 	sysdate,
	created_by						varchar2(30),
	last_updated_date			date		default	sysdate,
	last_updated_by				varchar2(30),
	constraint apds_hist_datafiles_u1 primary key (host_name, database_name, tablespace_name, file_name, collection_date)
);

drop table apds_admin.apds_hist_redologs purge;

-- Source :
-- SELECT host_name, target_name database_name, collection_timestamp, file_name, log_size log_size, group_num, members
--	FROM SYSMAN.MGMT$DB_REDOLOGS_ALL

create table apds_admin.apds_hist_redologs(
	host_name							varchar2(30),
	database_name					varchar2(30),
	collection_date				date		default		sysdate,
	file_name							varchar2(512),
	log_size							number,
	group_num							number,
	members								number,
	max_file_size					number,
	created_date					date		default 	sysdate,
	created_by						varchar2(30),
	last_updated_date			date		default		sysdate,
	last_updated_by				varchar2(30),
	constraint apds_hist_redologss_u1 primary key (database_name, file_name, collection_date)
);

drop table apds_admin.apds_hist_parameters;

-- Source :
-- SELECT host_name, target_name database_name, collection_timestamp, name, value
--	FROM SYSMAN.MGMT$DB_INIT_PARAMS_ALL
-- where values is not null;

create table apds_admin.apds_hist_parameters(
	host_name							varchar2(30),
	database_name					varchar2(30),
	collection_date				date		default		sysdate,
	parameter_name				varchar2(64),
	value									varchar2(4000),
	created_date					date		default 	sysdate,
	created_by						varchar2(30),
	last_updated_date			date		default	sysdate,
	last_updated_by				varchar2(30),
	constraint apds_hist_parameters_u1 primary key (host_name, database_name, parameter_name, collection_date)
);

============================================================================================================================================================================
Recreate Schema
---------------

Child Tables
------------
drop table apds_admin.apds_cluster purge;
drop table apds_admin.apds_cluster_gt purge;
drop table apds_admin.apds_asm purge;
drop table apds_admin.apds_asm_gt purge;
drop table apds_admin.apds_asm_client purge;
drop table apds_admin.apds_asm_client_gt purge;
drop table apds_admin.apds_database purge;
drop table apds_admin.apds_database_gt purge;
drop table apds_admin.apds_db_instance purge;
drop table apds_admin.apds_db_instance_gt purge;
drop table apds_admin.apds_listener purge;
drop table apds_admin.apds_listener_gt purge;
drop table apds_admin.apds_application purge;
drop table apds_admin.apds_application_gt purge;
drop table apds_admin.apds_host purge;
drop table apds_admin.apds_host_gt purge;
drop table apds_admin.apds_exadata_fcachedisk purge;
drop table apds_admin.apds_exadata_fcachedisk_gt purge;
drop table apds_admin.apds_exadata_celldisk purge;
drop table apds_admin.apds_exadata_celldisk_gt purge;
drop table apds_admin.apds_exadata_griddisk purge;
drop table apds_admin.apds_exadata_griddisk_gt purge;
drop table apds_admin.apds_exadata_cell_server purge;
drop table apds_admin.apds_exadata_cell_server_gt purge;
drop table apds_admin.apds_oracle_software purge;
drop table apds_admin.apds_oracle_software_gt purge;RU
drop table apds_admin.apds_goldengate purge;

drop table apds_admin.apds_config;
drop table apds_admin.apds_exadata purge;
drop table apds_admin.apds_exadata_dtl purge;


Parent Table
-----------
drop table apds_admin.apds_deployment purge;


Create DB  Link
---------------
create database link apds_oms connect to system identified by "Amigos#9" using 'cloudp';
create database link apds_infohub connect to system identified by "Amigos#9" using 'topoprd';

Get updated Passwords
---------------------

SELECT lower(login_id) login_id ,  wdbs.decrypt@infohub (PASSWORD_HEX, 'oracle1')    PASSWORD,
        decode(spc_production_ind, 'Y', 'YES', 'N','NO') as  PROD
          FROM wdbs.PASSWORDS@infohub
                 joIN wdbs.logins@infohub USING (login_key)
                 LEFT OUTER JOIN wdbs.servers@infohub s ON (passwords.server_key = s.server_key)
                 LEFT OUTER JOIN wdbs.instances@infohub i ON (passwords.instance_key = i.instance_key)
          where passwords.active_ind = 'Y'
                 AND infra_type in ('SERVER', 'INSTANCE')
                and lower(login_id) in ('system')
                and (instance_nm is null)
          ORDER by 1;
============================================================================================================================================================================

-	Need to include containers for SGA/CPU count calculation for apds_database/instance table to support 12.2          
 
============================================================================================================================================================================
 
 -- Scheduler Instrumentation

exec dbms_scheduler.drop_job('CP_NONPROD_DAILY_JOB');

BEGIN
	DBMS_SCHEDULER.create_job (
		job_name 					=> 'CP_NONPROD_DAILY_JOB',
		job_type 					=> 'PLSQL_BLOCK',
		job_action 				=> 'BEGIN APDS_ADMIN.APDS_ADMIN_PKG.CAPTURE_INFO_PRC(''N'',''D''); END;',
		start_date 				=>  SYSTIMESTAMP,
		repeat_interval 	=> 'freq=daily;byhour=06;byminute=15;bysecond=0',
		end_date 					=>  NULL,
		enabled 					=>  TRUE,
		comments 					=> 'Capacity Planning Scheduler Job to Capture NonProd DB Data');
End;
/

BEGIN
	DBMS_SCHEDULER.run_job (job_name	=> 'CP_NONPROD_DAILY_JOB',use_current_session 	=> FALSE);
END;
/

BEGIN
	DBMS_SCHEDULER.stop_job (job_name	=> 'CP_NONPROD_DAILY_JOB',force	=> TRUE);
END;
/

============================================================================================================================================================================
